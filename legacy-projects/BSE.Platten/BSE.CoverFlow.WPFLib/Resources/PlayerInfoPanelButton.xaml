<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    <Style x:Key="PlayerInfoPanelLabel" TargetType="{x:Type Label}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="21"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="#ffc6e0f2" CornerRadius="1" Name="Bd" BorderBrush="#ffc6e0f2" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- <Style x:Key="PlayerInfoPanelButton" TargetType="{x:Type Button}"><Style x:Key="PlayerInfoPanelButton" TargetType="{x:Type Button}">-->
    <Style x:Key="PlayerInfoPanelButton" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#ffc6e0f2" CornerRadius="1" Name="Bd" BorderBrush="#ffc6e0f2" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>-->
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <!--<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <!--<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="PlayerInfoPanelToggleButton" TargetType="{x:Type ToggleButton}">-->
    <Style x:Key="PlayerInfoPanelToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="21"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="#ffc6e0f2" CornerRadius="1" Name="Bd" BorderBrush="#ffc6e0f2" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>-->
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="#ADADAD"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF758699" Offset="0"/>
        <GradientStop Color="#FF516881" Offset="0.5"/>
        <GradientStop Color="#FF27394c" Offset="0.5"/>
        <GradientStop Color="#FF395068" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF57616f" Offset="0"/>
        <GradientStop Color="#99222738" Offset="0.5"/>
        <GradientStop Color="#99000011" Offset="0.5"/>
        <GradientStop Color="#FF01468c" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonHoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF8993a1" Offset="0"/>
        <GradientStop Color="#994d505e" Offset="0.5"/>
        <GradientStop Color="#331a2843" Offset="0.5"/>
        <GradientStop Color="#FF5c9dd6" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF0B0B0C" Offset="0.997"/>
        <GradientStop Color="#FF354160"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF181c3d" Offset="0.997"/>
        <GradientStop Color="#FF0b0b0c"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#33EEEEEE"/>

    <!--<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>-->

    <!--<Style x:Key="ControllerButtonStyle" TargetType="{x:Type Button}">-->
    <Style x:Key="PlayerInfoPanelControllerButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Fill="{TemplateBinding Background}" Stroke="{x:Null}"/>
                        <Rectangle x:Name="BackroundHover" RadiusX="1" RadiusY="1" Fill="{StaticResource ButtonHoverBackground}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="BackroundPressed" RadiusX="1" RadiusY="1" Fill="{StaticResource ButtonPressedBackground}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="BackgroundDisabled" RadiusX="1" RadiusY="1" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="Border" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="BorderPressed" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" Visibility="Hidden"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="BackroundHover" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>-->
                            <Setter Property="Visibility" TargetName="BorderPressed" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BackroundPressed" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ControllerButtonStyle" TargetType="{x:Type Button}">-->
    <Style x:Key="PlayerInfoPanelControllerToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Width" Value="34"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Fill="{TemplateBinding Background}" Stroke="{x:Null}"/>
                        <Rectangle x:Name="BackroundHover" RadiusX="1" RadiusY="1" Fill="{StaticResource ButtonHoverBackground}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="BackroundPressed" RadiusX="1" RadiusY="1" Fill="{StaticResource ButtonPressedBackground}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="BackgroundDisabled" RadiusX="1" RadiusY="1" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{x:Null}" Visibility="Hidden"/>
                        <Rectangle x:Name="Border" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="BorderPressed" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" Visibility="Hidden"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="BackroundHover" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>-->
                            <Setter Property="Visibility" TargetName="BorderPressed" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="BackroundPressed" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>