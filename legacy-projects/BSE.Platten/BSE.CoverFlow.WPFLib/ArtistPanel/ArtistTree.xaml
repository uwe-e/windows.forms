<UserControl x:Class="BSE.CoverFlow.WPFLib.ArtistPanel.ArtistTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:BSE.CoverFlow.WPFLib.Controls"
             xmlns:data="clr-namespace:BSE.CoverFlow.WPFLib.Data"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:viewmodels="clr-namespace:BSE.CoverFlow.WPFLib.ViewModel"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:p="clr-namespace:BSE.CoverFlow.WPFLib.Properties"
             mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BSE.CoverFlow.WPFLib;component/Themes/Black.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ControlLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <DockPanel>
            <TextBlock FontFamily="{StaticResource ControlTitleBigFontFamily}"
                       FontSize="{StaticResource ControlTitleFontSize}" 
                       FontWeight="SemiBold"
                       Foreground="{StaticResource WhiteColorBrush}"
                       Text="{x:Static p:Resources.IDS_ArtistsPanelHeader}" 
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center" 
                       IsHitTestVisible="False" DockPanel.Dock="Top"
                       Margin="11,0,0,10"/>

            <TextBlock Text="{x:Static p:Resources.IDS_IsLoadingMessage}"
                       Foreground="{StaticResource WhiteColorBrush}"
                       Margin="11,0,0,0"
                       DockPanel.Dock="Top"
                       Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        
        <TreeView Margin="0" x:Name="ArtistTreeView"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  VirtualizingStackPanel.IsVirtualizing="True"
                                       ItemsSource="{Binding Path=Interprets}"
                                       dd:DragDrop.IsDragSource="True">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewmodels:ArtistViewModel}"
                                          ItemsSource="{Binding Path=Children}">
                    <TextBlock Name="textBlock"
                               TextTrimming="CharacterEllipsis"
                               Text="{Binding Name}"/>
                </HierarchicalDataTemplate>
                
                <DataTemplate DataType="{x:Type viewmodels:AlbumViewModel}">
                <Border x:Name="OuterBorder"
                        SnapsToDevicePixels="true"
                        BorderThickness="1"
                        CornerRadius="2">
                    <Border x:Name="InnerBorder"
                            BorderThickness="1"
                            CornerRadius="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="11"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="UpperHighlight"
                                           Fill="#22FFFFFF"
                                           Visibility="Collapsed"/>
                            <Grid Grid.RowSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="20" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Image VerticalAlignment="Center" Grid.Column="0" Source="{Binding Path=CoverSource}"/>
                                <TextBlock Margin="10,0,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Foreground="{StaticResource WhiteColorBrush}" Grid.Column="1" Text="{Binding Path=Title}" />
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                        <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ListItemSelectedFill}"/>
                        <Setter TargetName="OuterBorder" Property="BorderBrush" Value="#FF484e68"/>
                        <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                        <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                        <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ListViewItemHoverBorderBrush}"/>
                        <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ListItemHoverFill}"/>
                        <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            </TreeView.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding Path=SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=ArtistTreeView, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TreeView>
    </DockPanel>
    </Grid>
</UserControl>
