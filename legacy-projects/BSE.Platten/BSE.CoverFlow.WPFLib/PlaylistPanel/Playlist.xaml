<UserControl x:Class="BSE.CoverFlow.WPFLib.PlaylistPanel.Playlist"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:BSE_Wpf_Controls="clr-namespace:BSE.Wpf.Windows.Controls;assembly=BSE.Wpf.Windows.Controls"
             xmlns:controls="clr-namespace:BSE.CoverFlow.WPFLib.Controls"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:service="clr-namespace:BSE.CoverFlow.WPFLib.Services"
             xmlns:p="clr-namespace:BSE.CoverFlow.WPFLib.Properties"
             mc:Ignorable="d"
             service:DialogService.IsRegisteredView="True"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BSE.CoverFlow.WPFLib;component/Themes/Black.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="trackTemplate">
                <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis"/>
            </DataTemplate>

            <DataTemplate x:Key="albumTemplate">
                <TextBlock Text="{Binding Path=Album}" TextTrimming="CharacterEllipsis"/>
            </DataTemplate>

            <DataTemplate x:Key="artistTemplate">
                <TextBlock Text="{Binding Path=Interpret}" TextTrimming="CharacterEllipsis"/>
            </DataTemplate>

            <DataTemplate x:Key="durationTemplate">
                <TextBlock Text="{Binding Path=Duration}" TextTrimming="CharacterEllipsis"/>
            </DataTemplate>

            <DataTemplate x:Key="genreTemplate">
                <TextBlock Text="{Binding Path=Genre}" TextTrimming="CharacterEllipsis"/>
            </DataTemplate>

            <ContextMenu x:Key="ListViewContextMenu">
                <MenuItem Header="{x:Static p:Resources.IDS_PlayList_Header_PlaySelectedTrack}" Command="{Binding DataContext.PlaySelectedTracksCommand, 
                    RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type UserControl}}}"
                          CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type ListView}}}" />
                <MenuItem Header="{x:Static p:Resources.IDS_PlayList_Header_GoToAlbum}" Command="{Binding DataContext.SelectedAlbumCommand, 
                    RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type UserControl}}}"
                          CommandParameter="{Binding}"/>
                <MenuItem Header="{x:Static p:Resources.IDS_PlayList_Header_RemoveSelectedTrack}" Command="{Binding DataContext.RemoveSelectedItemCommand, 
                    RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type UserControl}}}"
                          CommandParameter="{Binding}"/>
            </ContextMenu>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.Row="0">
            <BSE_Wpf_Controls:DropDownButton Name="ButtonPlaylists" Text="Playlists"
                                             Style="{StaticResource MetroSplitButtonStyle}"
                                             Margin="3.5"
                                             IsEnabled="{Binding HasPlaylists}"
                                             Foreground="{StaticResource WhiteColorBrush}" Width="Auto">
                <TextBlock Text="Playlists" FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource WhiteColorBrush}" Width="Auto"></TextBlock>
                <BSE_Wpf_Controls:DropDownButton.DropDownContextMenu>
                    <ContextMenu ItemsSource="{Binding Path=Playlists}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Command" Value="{Binding DataContext.SelectPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding}"/>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock.Text>
                                                    <Binding Path="Name"></Binding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </BSE_Wpf_Controls:DropDownButton.DropDownContextMenu>
            </BSE_Wpf_Controls:DropDownButton>
            <Button Name="ButtonNewPlaylist" Style="{StaticResource MetroButtonStyle}"
                    Foreground="{StaticResource WhiteColorBrush}"
                    Margin="3.5"
                    Command="{Binding Path=OpenNewPlaylistDialogCommand, Mode=Default}">
                <TextBlock Text="Insert" FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource WhiteColorBrush}" Width="Auto"/>
            </Button>
            <Button Name="ButtonSavePlaylist" Style="{StaticResource MetroButtonStyle}"
                    Foreground="{StaticResource WhiteColorBrush}"
                    Margin="3.5"
                    Command="{Binding Path=SavePlaylistCommand, Mode=Default}">
                <TextBlock Text="Save" FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource WhiteColorBrush}" Width="Auto"/>
            </Button>
            <Button Name="ButtonDeletePlaylist" Style="{StaticResource MetroButtonStyle}"
                    Margin="3.5"
                    Foreground="{StaticResource WhiteColorBrush}"
                    Command="{Binding Path=OpenDeletePlaylistDialogCommand, Mode=Default}">
                <TextBlock Text="Remove" FontWeight="SemiBold" FontSize="16" Foreground="{StaticResource WhiteColorBrush}" Width="Auto"/>
            </Button>
        </StackPanel>
        <ListView Name="PlaylistView"
                  Grid.Row="1"
                  ItemsSource="{Binding Path=Tracks}"
                  Foreground="{StaticResource WindowForegroundBrush}"
                  BSE_Wpf_Controls:ListViewColumns.Stretch="True"
                  BSE_Wpf_Controls:GridViewSort.AutoSort="True"
                  BSE_Wpf_Controls:GridViewSort.Command="{Binding SortCommand}"
                  dd:DragDrop.DropHandler="{Binding}"
                  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True">
            <ListView.InputBindings>
                <KeyBinding Command="{Binding Path=RemoveSelectedItemCommand}" Key="Del" CommandParameter="{Binding ElementName=PlaylistView, Path=SelectedItems}"/>
            </ListView.InputBindings>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="Height" Value="26" />
                    <Setter Property="ContextMenu" Value="{StaticResource ListViewContextMenu}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                            <Setter Property="Height" Value="30" />
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn CellTemplate="{StaticResource trackTemplate}"
                                    Width="Auto"
                                    BSE_Wpf_Controls:GridViewSort.PropertyName="Title">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Content="Track" HorizontalContentAlignment="Left"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{StaticResource albumTemplate}"
                                    Width="Auto"
                                    BSE_Wpf_Controls:GridViewSort.PropertyName="Album">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Content="Album" HorizontalContentAlignment="Left"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{StaticResource artistTemplate}"
                                    Width="Auto"
                                    BSE_Wpf_Controls:GridViewSort.PropertyName="Interpret">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Content="Artist" HorizontalContentAlignment="Left"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{StaticResource durationTemplate}"
                                    Width="60"
                                    BSE_Wpf_Controls:GridViewSort.PropertyName="Duration">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Content="Duration" HorizontalContentAlignment="Left"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn CellTemplate="{StaticResource genreTemplate}"
                                    Width="Auto"
                                    BSE_Wpf_Controls:GridViewSort.PropertyName="Genre">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Content="Genre" HorizontalContentAlignment="Left"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
