<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:BSE.CoverFlow.WPFLib.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/BSE.CoverFlow.WPFLib;component/Themes/Black.xaml"/>
        <ResourceDictionary Source="/BSE.CoverFlow.WPFLib;component/Themes/Fonts.xaml"/>
        <ResourceDictionary Source="/BSE.CoverFlow.WPFLib;component/Themes/Brushes.xaml"/>
        
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type controls:MessageWindow}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="controls:MessageWindow">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MessageWindow}">
                    <Grid>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Effect="{StaticResource DropShadowBrush}"/>
                        <Grid Margin="30,16,30,30">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowHeader" Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition x:Name="RowBody" Height="*" />
                                <!--<RowDefinition Height="20" />-->
                            </Grid.RowDefinitions>
                            <Grid Grid.Column="0"
                                      HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3.5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="15" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Rectangle Grid.Row="0"
                                           VerticalAlignment="Bottom" HorizontalAlignment="Left"
                                           Fill="{StaticResource AccentColorBlueBrush}" 
                                           Width="109" Height="6"
                                           IsHitTestVisible="False" />

                                <TextBlock Grid.Row="1"
                                           FontFamily="{StaticResource HeaderFontFamily}"
                                           FontSize="{StaticResource HeaderFontSize}" 
                                           FontWeight="SemiBold"
                                           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" 
                                           HorizontalAlignment="Left" 
                                           VerticalAlignment="Center" 
                                           IsHitTestVisible="False" />
                            </Grid>
                            <DockPanel Grid.Row="2" LastChildFill="True">
                                <Border DockPanel.Dock="Bottom" Margin="3.5">
                                    <StackPanel x:Name="ButtonsPanel"
                                            Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                                        <Button x:Name="AcceptButton" Command="controls:MessageWindow.AcceptCommand"
                                                Style="{StaticResource HyperlinkButtonStyle}"
                                                Content="OK" Margin="3.5" Padding="2" IsDefault="True" />
                                        <Button x:Name="CancelButton" Command="controls:MessageWindow.CancelCommand"
                                                Margin="3.5" Padding="2"
                                                Style="{StaticResource HyperlinkButtonStyle}" Content="Cancel" IsCancel="True" />
                                    </StackPanel>
                                </Border>
                                <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                            </DockPanel>
                        </Grid>
                        <!--<AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Buttons" Value="Ok">
                            <Setter TargetName="ButtonsPanel" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="CancelButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

</ResourceDictionary>